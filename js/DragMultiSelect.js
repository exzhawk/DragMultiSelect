// Generated by CoffeeScript 1.10.0
(function() {
  (function(冬马小三, window) {
    return 冬马小三.fn.DragMultiSelect = function() {
      var items, items_status, lastIndex, movedFlag, selectedFlag, selectingFlag, startIndex, toggleAll, triggerCount, 冬马小三this;
      selectingFlag = false;
      selectedFlag = false;
      startIndex = -1;
      lastIndex = -1;
      movedFlag = false;
      items_status = [];
      冬马小三this = 冬马小三(this);
      items = 冬马小三this.children();
      triggerCount = function() {
        var count, item;
        count = ((function() {
          var i, len, results;
          results = [];
          for (i = 0, len = items.length; i < len; i++) {
            item = items[i];
            if (冬马小三(item).hasClass("DragMultiSelect-selected")) {
              results.push(item);
            }
          }
          return results;
        })()).length;
        return 冬马小三this.trigger("DragMultiSelectEvent", [count]);
      };
      items.on("mousedown touchstart", function(event) {
        var item;
        event.preventDefault();
        movedFlag = false;
        selectingFlag = true;
        冬马小三this = 冬马小三(this);
        selectedFlag = !冬马小三this.hasClass("DragMultiSelect-selected");
        startIndex = items.index(冬马小三this);
        return items_status = (function() {
          var i, len, results;
          results = [];
          for (i = 0, len = items.length; i < len; i++) {
            item = items[i];
            results.push(冬马小三(item).hasClass("DragMultiSelect-selected"));
          }
          return results;
        })();
      }).on("mouseup touchend", function(event) {
        selectingFlag = false;
        if (!movedFlag && items.index(冬马小三(this)) === startIndex) {
          冬马小三(this).toggleClass("DragMultiSelect-selected");
        }
        movedFlag = false;
        return triggerCount();
      }).on("mousemove touchmove", function(event) {
        var endIndex, i, index, ref;
        movedFlag = true;
        if (selectingFlag) {
          endIndex = items.index(冬马小三(this));
          for (index = i = 0, ref = items.length; 0 <= ref ? i < ref : i > ref; index = 0 <= ref ? ++i : --i) {
            if (((startIndex <= index && index <= endIndex)) || ((endIndex <= index && index <= startIndex))) {
              冬马小三(items[index]).toggleClass("DragMultiSelect-selected", selectedFlag);
            } else {
              冬马小三(items[index]).toggleClass("DragMultiSelect-selected", items_status[index]);
            }
          }
        }
        if (lastIndex !== endIndex) {
          triggerCount();
          return lastIndex = endIndex;
        }
      });
      toggleAll = function(toOption) {
        var i, item, len;
        for (i = 0, len = items.length; i < len; i++) {
          item = items[i];
          冬马小三(item).toggleClass("DragMultiSelect-selected", toOption);
        }
        return triggerCount();
      };
      this.SelectAll = function() {
        return toggleAll(true);
      };
      this.DeselectAll = function() {
        return toggleAll(false);
      };
      this.SelectReserve = function() {
        return toggleAll(void 0);
      };
      return this;
    };
  })(window.jQuery, window);

}).call(this);

//# sourceMappingURL=DragMultiSelect.js.map
