// Generated by CoffeeScript 1.10.0
(function() {
  $(function() {
    var autoScroll, i, refresh, relativeSpeed, speed, triggerBound;
    refresh = function() {
      return $.getJSON("/browse", {
        path: $("#path").val()
      }, function(data) {
        var $container, dragMultiSelect, e, i, j, len;
        $container = $("#container");
        $container.empty();
        for (j = 0, len = data.length; j < len; j++) {
          i = data[j];
          e = encodeURIComponent(i);
          $("<div>").addClass('item').attr("path", i).css("background-image", "url(/file?path=" + e + ")").appendTo($container);
        }
        $("#count").attr("data-badge", 0);
        dragMultiSelect = $("#container").DragMultiSelect();
        return dragMultiSelect.on("DragMultiSelectEvent", function(event, count) {
          return $("#count").attr("data-badge", count);
        });
      });
    };
    $("#go").on("click", function() {
      var dragMultiSelect, i, j;
      if ($("#path").val() === "") {
        for (i = j = 0; j < 40; i = ++j) {
          $("<div>").addClass('item').appendTo($("#container"));
        }
        dragMultiSelect = $("#container").DragMultiSelect();
        return dragMultiSelect.on("DragMultiSelectEvent", function(event, count) {
          return $("#count").attr("data-badge", count);
        });
      } else {
        return refresh();
      }
    });
    $("#delete").on("click", function() {
      var item, selection;
      selection = (function() {
        var j, len, ref, results;
        ref = $("#container .selected");
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          results.push($(item).attr("path"));
        }
        return results;
      })();
      return $.ajax({
        url: "/delete",
        data: {
          paths: selection
        },
        method: "POST",
        success: function() {
          return refresh();
        }
      });
    });
    speed = 0;
    triggerBound = 200;
    autoScroll = function() {
      $("main")[0].scrollTop += speed * 10;
      return setTimeout(autoScroll, 10);
    };
    autoScroll();
    relativeSpeed = (function() {
      var j, ref, results;
      results = [];
      for (i = j = 0, ref = triggerBound + 1; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        results.push(0.5 + Math.cos(i / triggerBound * Math.PI) / 2);
      }
      return results;
    })();
    return $("main").on("mousemove", function(event) {
      var $this, bottomOffset, mouse_pos, position, topOffset;
      mouse_pos = event.clientY;
      $this = $(this);
      position = $this.position();
      topOffset = mouse_pos - position.top;
      bottomOffset = position.top + $this.height() - mouse_pos;
      if (topOffset < triggerBound) {
        return speed = -relativeSpeed[topOffset];
      } else if (bottomOffset < triggerBound) {
        return speed = relativeSpeed[bottomOffset];
      } else {
        return speed = 0;
      }
    }).on("mouseout", function() {
      return speed = 0;
    });
  });

}).call(this);

//# sourceMappingURL=demo.js.map
